１．编写调用test node启动文件

rostest调用test node的文件通常扩展名是.test，有时可能也会扩展名使用.launch，文件中<test>标签指定要运行的test node。

<test>标签与正常node属性基本一致（例外：没有属性respawn，output；忽略machine属性），必须属性包括test-name，pkg，type，其它都是可选属性。

如：<test test-name="test_1_2" pkg="mypkg" type="test_1_2.py" time-limit="10.0" args="--test1 --test2" />

２．函数解析及用法可参考此链接：
https://wenku.baidu.com/view/abec0f8f700abb68a882fb67.html
第８页开始

３．运行的两种方式：
https://blog.csdn.net/jinking01/article/details/103024106

４．在CMakeLists.txt中，添加下面的编译即可！
catkin_add_gtest(${PROJECT_NAME}-test test/test_detection.cpp)
target_link_libraries(${PROJECT_NAME}-test
 lawn_perception
            kestrel_universal
            kestrel_core
            kestrel_kernel
            ${OpenCV_LIBS}
            ${catkin_LIBRARIES}
            )

５．unittest框架了解吗？
参考答案：unittest框架，由setUp()--环境预置，testCase()--- 测试用例 tearDown()----环境恢复，三大部分组成，unittest框架可组织执行测试用例，并且提供丰富的断言方法，判断测试用例是否通过，最终生成测试结果。

６．CI/CD 中的“CI”始终指持续集成，它属于开发人员的自动化流程。成功的 CI 意味着应用代码的新更改会定期构建、测试并合并到共享存储库中。该解决方案可以解决在一次开发中有太多应用分支，从而导致相互冲突的问题。
CI/CD 中的“CD”指的是持续交付和/或持续部署，这些相关概念有时会交叉使用。两者都事关管道后续阶段的自动化，但它们有时也会单独使用，用于说明自动化程度。

７．夹具的形式TEST_F()

８．互联网软件的开发和发布，已经形成了一套标准流程，最重要的组成部分就是持续集成（Continuous integration，简称CI）。
https://www.jianshu.com/p/61b5b549d215　（做PPT用得上此链接)
https://www.cnblogs.com/wintersun/p/6285815.html




